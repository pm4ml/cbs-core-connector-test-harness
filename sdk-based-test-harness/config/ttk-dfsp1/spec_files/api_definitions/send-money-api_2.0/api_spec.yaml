openapi: 3.0.1
info:
  title: Core Banking System Core Connector Send Money API
  description: >
    Specification for Core Banking System Core Connectors Send Money API.

    This API is intended to be implemented by the Core Connector. It is used to 
    initiate transfers from a DFSP Operations application.


    **USE CASE AND SCENARIO**


    Assuming a customer in your DFSP wants to send money from their account held
    in your bank to another customer whose account is in another bank in the Mojaloop
    Scheme.
    Once the customer has initaited the transfer using your application, to effect the transfer,
    a POST send-money api call will be sent to this api. This api is to be implemented by the 
    core connector such it can receive requests from your Operations application which will then effectively communicate with your DFSP Hosted Mojaloop
    connector to be able to effect the transfer in the mojaloop switch.


    **Note on terminology:** The term "Switch" is equal to the term "Hub", and
    the term "FSP" is equal to the term "DFSP".
  license:
    name: Apache License Version 2.0, January 2004
    url: https://github.com/mojaloop/documentation/blob/main/LICENSE.md
  version: 1.0.0
paths:
  /:
    get:
      summary: Health check endpoint
      description: >-
        This endpoint allows a user of the SDK scheme adapter to check the
        outbound transfers service is listening.
      tags:
        - Health
      responses:
        "200":
          description: >-
            Returns empty body if the scheme adapter outbound transfers service
            is running.
  /accounts:
    post:
      summary: Create accounts on the Account Lookup Service 
      description: |-
        The HTTP request `POST /accounts` is used to create account information on the Account Lookup Service (ALS) regarding the provided list of identities.

        Caller DFSP is used as the account source FSP information
      operationId: PostAccounts
      tags:
        - Accounts
      requestBody:
        description: Identities list request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountsRequest'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/accountsCreationCompleted'
        '400':
          $ref: '#/components/responses/accountsCreationError'
        '500':
          $ref: '#/components/responses/accountsCreationError'
        '504':
          $ref: '#/components/responses/accountsCreationTimeout'
  /accounts/{Type}/{ID}:
    delete:
      summary: Delete account on the Account Lookup Service
      description: The HTTP request `DELETE /accounts/{Type}/{ID}` is used to account account information on the Account Lookup Service (ALS) by Type and ID.
      operationId: DeleteAccounts
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/Type'
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/accountDeletionCompleted'
        '400':
          $ref: '#/components/responses/accountDeletionError'
        '500':
          $ref: '#/components/responses/accountDeletionError'
        '504':
          $ref: '#/components/responses/accountDeletionTimeout'
  /send-money:
    post:
      summary: Send Money endpoint
      description: >-
        The Endpoint used by the DFSP Operations application to initiate send money 
        requests to the mojaloop connector

      operationId: sendMoney
      requestBody:
        description: Send Money request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sendMoneyRequest"
      tags:
        - Send Money
      responses:
        "200":
          description: >-
            Response for send money request. A quote if it is double 
            integration or a payment status response if it is single
            integration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sendMoneyResponse"
        "400":
          description: >-
            Response for a bad request.
        "500":
          description: >-
            Response for an internal server error
        "504":
          description: >-
            Response for a timed out transfer
  /send-money/{transferId}:
    put:
      summary: Confirm send money
      operationId: sendMoneyUpdate
      parameters:
        - name: transferId
          in: path
          required: true
          description: The ID of the transaction
          schema:
            type: string
            example: "HTX987654321"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmSendMoney"
      tags:
        - Send Money
      responses:
        "200":
          description: Send money confirmed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmSendMoneyResponse"
        "400":
          description: Bad request

  /merchant-payment:
    post:
      summary: Send Money endpoint
      operationId: initiateMerchantPayment
      description: >-
        The Endpoint used by the DFSP Operations application to initiate merchant payment
        requests to the mojaloop connector
      requestBody:
        description: Send Money request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/merchantPaymentRequest"
      tags:
        - Merchant Payments
      responses:
        "200":
          description: >-
            Response for send money request. A quote if it is double 
            integration or a payment status response if it is single
            integration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/merchantPaymentResponse"

        "400":
          description: >-
            Response for bad request
        "500":
          description: >-
            Internal Server error
        "504":
          description: >-
            Transfer Timeout.

  /merchant-payment/{transferId}:
    put:
      summary: Confirm send money
      operationId: updateInitiatedMerchantPayment
      parameters:
        - name: transferId
          in: path
          required: true
          description: The ID of the transaction
          schema:
            type: string
            example: "HTX987654321"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmSendMoney"
      tags:
        - Merchant Payments
      responses:
        "200":
          description: Send money confirmed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmSendMoneyResponse"
        "400":
          description: Bad request

  /transfers/{transferId}:
    get:
      summary: Retrieves information for a specific transfer
      description: The HTTP request `GET /transfers/{transferId}` is used to get information regarding a transfer created or requested earlier. The `{transferId}` in the URI should contain the `transferId` that was used for the creation of the transfer.
      operationId: OutoundTransfersGet
      tags:
        - Transaction Enquiry
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        '200':
          description: Transfer information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferStatusResponse'
        '500':
          description: An error occurred processing the transfer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

components:
  responses:
    accountsCreationCompleted:
      description: Accounts creation completed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/accountsResponse'
    accountsCreationError:
      description: An error occurred creating accounts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorAccountsResponse'
    accountsCreationTimeout:
      description: Timeout occurred creating accounts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorAccountsResponse'
    accountDeletionCompleted:
      description: Account deletion completed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/accountDeletionResponse'
    accountDeletionError:
      description: An error occurred while deleting an account
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorAccountsResponse'
    accountDeletionTimeout:
      description: Timeout occurred while deleting an account
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorAccountsResponse'
  parameters:
    Type:
      name: Type
      in: path
      required: true
      schema:
        type: string
      description: The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`.
    ID:
      name: ID
      in: path
      required: true
      schema:
        type: string
      description: The identifier value.
    SubId:
      name: SubId
      in: path
      required: true
      schema:
        type: string
      description: A sub-identifier of the party identifier, or a sub-type of the party identifier's type. For example, `PASSPORT`, `DRIVING_LICENSE`.
    transferId:
      name: transferId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CorrelationId'
      description: Identifier of the transfer to continue as returned in the response to a `POST /transfers` request.
  schemas:
    accountCreationStatus:
      type: array
      items:
        type: object
        required:
          - idType
          - idValue
        properties:
          idType:
            $ref: '#/components/schemas/PartyIdType'
          idValue:
            $ref: '#/components/schemas/PartyIdentifier'
          idSubValue:
            $ref: '#/components/schemas/PartySubIdOrType'
          error:
            $ref: '#/components/schemas/errorResponse'
    accountsCreationState:
      type: string
      enum:
        - ERROR_OCCURRED
        - COMPLETED
    accountsResponse:
      type: object
      required:
        - accounts
      properties:
        modelId:
          $ref: '#/components/schemas/CorrelationId'
        accounts:
          $ref: '#/components/schemas/accountsRequest'
        response:
          $ref: '#/components/schemas/accountCreationStatus'
        currentState:
          $ref: '#/components/schemas/accountsCreationState'
        lastError:
          $ref: '#/components/schemas/transferError'
        postAccountsResponse:
          type: object
          required:
            - body
          properties:
            body:
              type: object
            headers:
              type: object
    errorAccountsResponse:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          required:
            - executionState
          properties:
            executionState:
              $ref: '#/components/schemas/accountsResponse'
    FspId:
      title: FspId
      type: string
      minLength: 1
      maxLength: 32
      description: FSP identifier.
    accountDeletionStatus:
      type: array
      items:
        type: object
        required:
          - fspId
        properties:
          fspId:
            $ref: '#/components/schemas/FspId'
          error:
            $ref: '#/components/schemas/errorResponse'
    accountDeletionState:
      type: string
      enum:
        - ERROR_OCCURRED
        - COMPLETED
    accountDeletionResponse:
      type: object
      required:
        - idType
        - idValue
      properties:
        idType:
          $ref: '#/components/schemas/PartyIdType'
        idValue:
          $ref: '#/components/schemas/PartyIdentifier'
        subIdOrType:
          $ref: '#/components/schemas/PartySubIdOrType'
        response:
          $ref: '#/components/schemas/accountDeletionStatus'
        currentState:
          $ref: '#/components/schemas/accountDeletionState'
        lastError:
          $ref: '#/components/schemas/transferError'
        deleteAccountResponse:
          type: object
          required:
            - body
          properties:
            body:
              type: object
            headers:
              type: object
    transferError:
      type: object
      description: This object represents a Mojaloop API error received at any time during the transfer process
      properties:
        httpStatusCode:
          type: integer
          description: The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response.
        mojaloopError:
          $ref: '#/components/schemas/mojaloopError'
    mojaloopError:
      type: object
      properties:
        errorInformation:
          $ref: '#/components/schemas/ErrorInformation'
    ErrorInformation:
      title: ErrorInformation
      type: object
      description: Data model for the complex type ErrorInformation.
      properties:
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        errorDescription:
          $ref: '#/components/schemas/ErrorDescription'
        extensionList:
          $ref: '#/components/schemas/ExtensionList_v2_1_0'
      required:
        - errorCode
        - errorDescription
    ErrorCode:
      title: ErrorCode
      type: string
      pattern: ^[1-9]\d{3}$
      description: The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.
      example: '5100'
    ErrorDescription:
      title: ErrorDescription
      type: string
      minLength: 1
      maxLength: 128
      description: Error description string.
    PartyIdType:
      title: PartyIdType
      type: string
      enum:
        - MSISDN
        - EMAIL
        - PERSONAL_ID
        - BUSINESS
        - DEVICE
        - ACCOUNT_ID
        - IBAN
        - ALIAS
      description: |-
        Below are the allowed values for the enumeration.
        - MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.
        - EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).
        - PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.
        - BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.
        - DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.
        - ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.
        - IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.
        - ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier.
    PartyIdentifier:
      title: PartyIdentifier
      type: string
      minLength: 1
      maxLength: 128
      description: Identifier of the Party.
      example: '16135551212'
    PartySubIdOrType:
      title: PartySubIdOrType
      type: string
      minLength: 1
      maxLength: 128
      description: Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType.
    Currency:
      title: Currency
      description: The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.
      type: string
      minLength: 3
      maxLength: 3
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMW
        - ZWD
    accountsRequest:
      type: array
      items:
        type: object
        required:
          - idType
          - idValue
        properties:
          idType:
            $ref: '#/components/schemas/PartyIdType'
          idValue:
            $ref: '#/components/schemas/PartyIdentifier'
          idSubValue:
            $ref: '#/components/schemas/PartySubIdOrType'
          currency:
            $ref: '#/components/schemas/Currency'
    errorResponse:
      type: object
      properties:
        statusCode:
          type: string
          description: |
            Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.
            Otherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.
        message:
          type: string
          description: Error message text.
    ExtensionKey_v2_1_0:
      title: ExtensionKey_v2_1_0
      type: string
      minLength: 1
      description: Extension key.
    ExtensionValue:
      title: ExtensionValue
      type: string
      minLength: 1
      maxLength: 128
      description: Extension value.
    Extension_v2_1_0:
      title: Extension_v2_1_0
      type: object
      description: Data model for the complex type Extension.
      properties:
        key:
          $ref: '#/components/schemas/ExtensionKey_v2_1_0'
        value:
          $ref: '#/components/schemas/ExtensionValue'
      required:
        - key
        - value
    ExtensionList_v2_1_0:
      title: ExtensionList
      type: object
      description: Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.
      properties:
        extension:
          type: array
          items:
            $ref: '#/components/schemas/Extension_v2_1_0'
          minItems: 1
          maxItems: 16
          description: Number of Extension elements.
      required:
        - extension
    TransferState:
      title: TransferState
      type: string
      enum:
        - RECEIVED
        - RESERVED
        - COMMITTED
        - ABORTED
      description: |-
        Below are the allowed values for the enumeration.
        - RECEIVED - Next ledger has received the transfer.
        - RESERVED - Next ledger has reserved the transfer.
        - COMMITTED - Next ledger has successfully performed the transfer.
        - ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.
      example: RESERVED
    DateTime:
      title: DateTime
      type: string
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z indicates Zulu time zone, same as UTC).
      example: '2016-05-24T08:38:08.699-04:00'
    IlpFulfilment:
      title: IlpFulfilment
      type: string
      pattern: ^[A-Za-z0-9-_]{43}$
      maxLength: 48
      description: Fulfilment that must be attached to the transfer by the Payee.
      example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8
    TransfersIDPutResponse:
      title: TransfersIDPutResponse
      type: object
      description: The object sent in the PUT /transfers/{ID} callback.
      properties:
        fulfilment:
          $ref: '#/components/schemas/IlpFulfilment'
        completedTimestamp:
          $ref: '#/components/schemas/DateTime'
        transferState:
          $ref: '#/components/schemas/TransferState'
        extensionList:
          $ref: '#/components/schemas/ExtensionList_v2_1_0'
      required:
        - transferState
    transferStatus:
      type: string
      enum:
        - ERROR_OCCURRED
        - WAITING_FOR_PARTY_ACCEPTANCE
        - WAITING_FOR_QUOTE_ACCEPTANCE
        - WAITING_FOR_CONVERSION_ACCEPTANCE
        - COMPLETED
    transferStatusResponse:
      type: object
      required:
        - transferId
        - currentState
        - fulfil
      properties:
        transferId:
          $ref: '#/components/schemas/CorrelationId'
        currentState:
          $ref: '#/components/schemas/transferStatus'
        fulfil:
          type: object
          required:
            - body
          properties:
            body:
              $ref: '#/components/schemas/TransfersIDPutResponse'
            headers:
              type: object
    CorrelationId:
      title: CorrelationId
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$|^[0-9A-HJKMNP-TV-Z]{26}$
      description: Identifier that correlates all messages of the same sequence. The supported identifiers formats are for lowercase [UUID](https://datatracker.ietf.org/doc/html/rfc9562) and uppercase [ULID](https://github.com/ulid/spec)
      example: b51ec534-ee48-4575-b6a9-ead2955b8069
    merchantPaymentRequest:
      type: object
      properties:
        homeTransactionId:
          type: string
          example: "HTX123456789"
        payeeId:
          type: string
          example: "16135551212"
        payeeIdType:
          type: string
          example: "MSISDN"
        sendCurrency:
          type: string
          example: "UGX"
        receiveAmount:
          type: string
          example: "150.00"
        receiveCurrency:
          type: string
          example: "KES"
        purposeCode:
          type: string 
          example: "MP2P"
        transactionType:
          type: string
          example: "TRANSFER"
        payer:
          type: object
          properties:
            name:
              type: string
              example: "John Doe"
            payerId:
              type: string
              example: "9876543210"
            DateAndPlaceOfBirth:
              type: object
              properties:
                BirthDt:
                  type: string
                  example: "20-09-2001"
                PrvcOfBirth:
                  type: string
                  example: "ProvinceOfBirth"
                CityOfBirth:
                  type: string
                  example: "Lilongwe"
                CtryOfBirth:
                  type: string
                  example: "Malawi"
              required:
                - BirthDt
                - CityOfBirth
                - CtryOfBirth
          required:
            - name
            - payerId
      required:
        - payeeId
        - payeeIdType
        - sendCurrency
        - receiveCurrency
        - transactionType
        - payer
      

    merchantPaymentResponse:
      type: object
      properties:
        payeeDetails:
          type: object
          properties:
            idType:
              type: string
              example: "MSISDN"
            idValue:
              type: string
              example: "990454454"
            fspId:
              type: string
              example: "tnmmalawi"
            fspLEI:
              type: string
              example: "01JSH28PTXY6JKC31958EKF93N"
            name:
              type: string
              example: "Niza"

        sendAmount:
          type: string
          example: "140.00"
        sendCurrency:
          type: string
          example: "MWK"
        receiveAmount:
          type: string
          example: "140.00"
        receiveCurrency:
          type: string
          example: "MWK"
        targetFees:
          type: string
          example: "10.00"
        sourceFees:
          type: string
          example: "10.00"
        transactionId:
          type: string
          example: "42fdb186-2a36-46f1-9be9-8989a9e0aeb4"
    sendMoneyResponse:
      type: object
      properties:
        payeeDetails:
          type: object
          properties:
            idType:
              type: string
              example: "MSISDN"
            idValue:
              type: string
              example: "990454454"
            fspId:
              type: string
              example: "tnmmalawi"
            fspLEI:
              type: string
              example: "01JSH28PTXY6JKC31958EKF93N"
            name:
              type: string
              example: "Niza"

        sendAmount:
          type: string
          example: "140.00"
        sendCurrency:
          type: string
          example: "ZMW"
        receiveAmount:
          type: string
          example: "140.00"
        receiveCurrency:
          type: string
          example: "MWK"
        targetFees:
          type: string
          example: "10.00"
        sourceFees:
          type: string
          example: "10.00"
        transactionId:
          type: string
          example: "01JKB0F2WV7YVSA6CXGP977XT9"
        homeTransactionId:
          type: string
          example: "42fdb186-2a36-46f1-9be9-8989a9e0aeb4"
    sendMoneyRequest:
      type: object
      properties:
        homeTransactionId:
          type: string
          example: "HTX123456789"
        payeeId:
          type: string
          example: "16135551212"
        payeeIdType:
          type: string
          example: "MSISDN"
        sendAmount:
          type: string
          example: "150.00"
        sendCurrency:
          type: string
          example: "UGX"
        receiveCurrency:
          type: string
          example: "KES"
        purposeCode:
          type: string 
          example: "MP2P"
        transactionType:
          type: string
          example: "TRANSFER"
        payer:
          type: object
          properties:
            name:
              type: string
              example: "John Doe"
            payerId:
              type: string
              example: "9876543210"
            DateAndPlaceOfBirth:
              type: object
              properties:
                BirthDt:
                  type: string
                  example: "20-09-2001"
                PrvcOfBirth:
                  type: string
                  example: "ProvinceOfBirth"
                CityOfBirth:
                  type: string
                  example: "Lilongwe"
                CtryOfBirth:
                  type: string
                  example: "Malawi"
              required:
                - BirthDt
                - CityOfBirth
                - CtryOfBirth
          required:
            - name
            - payerId
      required:
        - payeeId
        - payeeIdType
        - sendAmount
        - sendCurrency
        - receiveCurrency
        - transactionType
        - payer

    ConfirmSendMoney:
      type: object
      properties:
        acceptQuote:
          type: boolean
        homeTransactionId:
          type: string
          example: "HTX123456789"
      required:
        - acceptQuote
        - homeTransactionId
    
    ConfirmSendMoneyResponse:
      type: object
      properties:
        transferId:
          type: string
          example: "HTX123456789"
      